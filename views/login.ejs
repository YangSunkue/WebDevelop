<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container mt-5">
        <div class="row justify-content-center">
            <div class="col-md-6">
                <h1 class="text-center">로그인</h1>
                <p id="message" class="text-danger text-center"></p>
                <form id="loginForm" class="border p-4 bg-light">
                    <div class="form-group">
                        <label for="id">ID:</label>
                        <input type="text" id="id" name="id" class="form-control" required>
                    </div>
                    <div class="form-group">
                        <label for="pw">PW:</label>
                        <input type="password" id="pw" name="pw" class="form-control" required>
                    </div>
                    <button type="submit" class="btn btn-primary btn-block">로그인</button>
                </form>
                <button class="btn btn-secondary btn-block mt-3" onclick="location.href='/'">돌아가기</button>
            </div>
        </div>
    </div>

    <script>
        document.getElementById('loginForm').addEventListener('submit', function(event) {
            event.preventDefault(); // 폼이 제출될 때 새로고침되는 걸 막음
    
            const id = document.getElementById('id').value;
            const pw = document.getElementById('pw').value;
            const messageElement = document.getElementById('message');
            
            // 서버 api로 요청한다
            fetch('/login', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ id, pw })
            })
            // 응답이 오면 처리한다
            .then(response => response.json().then(data => ({ status: response.status, body: data })))
            .then(({ status, body }) => {
                if (status === 200 && body.accessToken) {
                    localStorage.setItem('accessToken', body.accessToken);
                    alert('로그인 성공!');
                    window.location.href = '/'; // 메인 페이지로 리디렉션
                } else {
                    messageElement.textContent = body.message || '로그인 실패'; // 메시지를 페이지에 표시
                }
            })
            .catch(error => {
                messageElement.textContent = '로그인 중 오류가 발생했습니다.';
                console.error('Error:', error);
            });
        });
    </script>
    
</body>
</html>